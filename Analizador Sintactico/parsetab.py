
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEDIVIDE EQUALS IDENTIFIER LPAREN MINUS NUMBER PLUS RPAREN SEMICOLON TIMESprogram : assignment\n               | assignment programassignment : IDENTIFIER EQUALS expression SEMICOLONexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : LPAREN expression RPARENexpression : NUMBERexpression : IDENTIFIER'
    
_lr_action_items = {'IDENTIFIER':([0,2,5,8,10,11,12,13,14,],[3,3,6,6,-3,6,6,6,6,]),'$end':([1,2,4,10,],[0,-1,-2,-3,]),'EQUALS':([3,],[5,]),'LPAREN':([5,8,11,12,13,14,],[8,8,8,8,8,8,]),'NUMBER':([5,8,11,12,13,14,],[9,9,9,9,9,9,]),'SEMICOLON':([6,7,9,16,17,18,19,20,],[-10,10,-9,-4,-5,-6,-7,-8,]),'PLUS':([6,7,9,15,16,17,18,19,20,],[-10,11,-9,11,-4,-5,-6,-7,-8,]),'MINUS':([6,7,9,15,16,17,18,19,20,],[-10,12,-9,12,-4,-5,-6,-7,-8,]),'TIMES':([6,7,9,15,16,17,18,19,20,],[-10,13,-9,13,13,13,-6,-7,-8,]),'DIVIDE':([6,7,9,15,16,17,18,19,20,],[-10,14,-9,14,14,14,-6,-7,-8,]),'RPAREN':([6,9,15,16,17,18,19,20,],[-10,-9,20,-4,-5,-6,-7,-8,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,],[1,4,]),'assignment':([0,2,],[2,2,]),'expression':([5,8,11,12,13,14,],[7,15,16,17,18,19,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> assignment','program',1,'p_program','syntax.py',54),
  ('program -> assignment program','program',2,'p_program','syntax.py',55),
  ('assignment -> IDENTIFIER EQUALS expression SEMICOLON','assignment',4,'p_assignment','syntax.py',63),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','syntax.py',68),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','syntax.py',69),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','syntax.py',70),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','syntax.py',71),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','syntax.py',75),
  ('expression -> NUMBER','expression',1,'p_expression_number','syntax.py',79),
  ('expression -> IDENTIFIER','expression',1,'p_expression_identifier','syntax.py',83),
]
